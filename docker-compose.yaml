version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: evolution_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - evolution-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d evolution_db || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server","--port","6379","--appendonly","yes"]
    volumes:
      - evolution_redis:/data
    networks:
      - evolution-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30

  api:
    image: evoapicloud/evolution-api:latest
    container_name: evolution_api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "9001:8080"          # ðŸ‘ˆ APIâ€™yi dÄ±ÅŸarÄ± 9001â€™den aÃ§Ä±yoruz
    expose:
      - "8080"
    env_file:
      - .env                 # Secretsâ€™tan gelen ENVâ€™lerle birlikte Ã§alÄ±ÅŸÄ±r
    environment:
      SERVER_TYPE: http
      SERVER_PORT: "8080"
      HOST: 0.0.0.0
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evolution-net

volumes:
  evolution_instances:
    external: true
  evolution_redis:
    external: true
  postgres_data:
    external: true

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
