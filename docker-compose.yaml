version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: evolution_db
      # Healthcheck'in şifreye ihtiyaç duymaması için pg_isready'e PGPASSWORD geçiyoruz
      PGPASSWORD: pass
    volumes:
      - postgres_data_v2:/var/lib/postgresql/data
    healthcheck:
      # Sunucu hazır mı? Kullanıcı/DB ile gerçek bağlantı kurarak kontrol et
      test: ["CMD-SHELL", "pg_isready -q -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 120
    networks:
      - evolution-net

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: ["redis-server","--port","6379","--appendonly","yes"]
    volumes:
      - evolution_redis:/data
    networks:
      - evolution-net

  api:
    image: evoapicloud/evolution-api:latest
    container_name: evolution_api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"                       # İstersen kaldırıp Coolify Networking ile expose edebilirsin
    environment:
      # ---- Server ----
      SERVER_TYPE: http
      SERVER_PORT: 8080
      LANGUAGE: en
      LOG_LEVEL: INFO
      LOG_COLOR: "true"
      CORS_ORIGIN: "*"
      CORS_METHODS: "GET,POST,PUT,DELETE"
      CORS_CREDENTIALS: "true"
      TELEMETRY: "false"

      # ---- Auth ----
      AUTHENTICATION_API_KEY: pp_1pI1sE4b2c9Dk7Qz6mN4w8T1a5G0y3H2v9J5rX8fL2uC7kP
      AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES: "true"

      # ---- Database (API ile Postgres tam uyumlu) ----
      DATABASE_ENABLED: "true"
      DATABASE_PROVIDER: postgresql
      DATABASE_URL: postgresql://user:pass@postgres:5432/evolution_db?schema=evolution_api

      # ---- Cache ----
      CACHE_LOCAL_ENABLED: "false"
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: redis://redis:6379/6
      CACHE_REDIS_PREFIX_KEY: evolution
      CACHE_REDIS_SAVE_INSTANCES: "true"
    volumes:
      - evolution_instances:/evolution/instances
    expose:
      - "8080"
    networks:
      - evolution-net

volumes:
  evolution_instances:
  evolution_redis:
  # Yeni isim: eski, bozuk veriyi otomatik kullanmasın diye farklı volume adı
  postgres_data_v2:

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
